from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import os

API_TOKEN = os.getenv("API_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –†–µ–ø–ª–∞–π-–∫–Ω–æ–ø–∫–∏ (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏)
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)

row1 = [KeyboardButton("–°–ø–æ—Ä—Ç"), KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏ –ü—Ä–æ—Ñ–∫–æ–º–∞")]
row2 = [KeyboardButton("–û–¢–∏–ü–ë"), KeyboardButton("–§–∞–±—Ä–∏–∫–∞ –∏–¥–µ–π")]
row3 = [KeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ –ë–°–ê")]

keyboard.row(*row1)
keyboard.row(*row2)
keyboard.row(*row3)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    caption = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º—É –Ω–∏–∂–µ:"
    photo_path = "welcome.jpg"  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª –µ—Å—Ç—å

    try:
        with open(photo_path, 'rb') as photo:
            await message.answer_photo(photo=photo, caption=caption, reply_markup=keyboard)
    except FileNotFoundError:
        await message.answer(caption, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message_handler(lambda message: message.text == "–°–ø–æ—Ä—Ç")
async def handle_sport(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–ø–æ—Ä—Ç-–∫–∞–Ω–∞–ª: https://t.me/sportsoda")

@dp.message_handler(lambda message: message.text == "–ù–æ–≤–æ—Å—Ç–∏ –ü—Ä–æ—Ñ–∫–æ–º–∞")
async def handle_news(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∫–æ–º–∞: https://t.me/profkomsoda")

@dp.message_handler(lambda message: message.text == "–û–¢–∏–ü–ë")
async def handle_otipb(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –û–¢–∏–ü–ë: https://t.me/your_invest_channel")

@dp.message_handler(lambda message: message.text == "–§–∞–±—Ä–∏–∫–∞ –∏–¥–µ–π")
async def handle_factory(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É –∏–¥–µ–π: https://t.me/your_invest_channel")

@dp.message_handler(lambda message: message.text == "–ß—Ç–æ —Ç–∞–∫–æ–µ –ë–°–ê")
async def handle_bsa(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –ë–°–ê: https://t.me/your_invest_channel")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
