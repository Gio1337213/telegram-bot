from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from aiogram.dispatcher.filters import CommandStart
import os
import json

API_TOKEN = os.getenv("API_TOKEN") or "YOUR_API_TOKEN"
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –§–∞–π–ª –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
SUBSCRIBERS_FILE = "subscribers.json"

def load_subscribers():
    if not os.path.exists(SUBSCRIBERS_FILE):
        return []
    with open(SUBSCRIBERS_FILE, "r") as f:
        return json.load(f)

def save_subscribers(subscribers):
    with open(SUBSCRIBERS_FILE, "w") as f:
        json.dump(subscribers, f)

# –†–µ–ø–ª–∞–π-–∫–Ω–æ–ø–∫–∞ "–ö–∞–Ω–∞–ª—ã"
menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
menu_keyboard.add(KeyboardButton("üì¢ –ö–∞–Ω–∞–ª—ã"))

# –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
inline_links = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text="–°–ø–æ—Ä—Ç", url="https://t.me/sportsoda"),
    InlineKeyboardButton(text="–ù–æ–≤–æ—Å—Ç–∏ –ü—Ä–æ—Ñ–∫–æ–º–∞", url="https://t.me/profkomsoda"),
    InlineKeyboardButton(text="–û–¢–∏–ü–ë", url="https://t.me/your_invest_channel"),
    InlineKeyboardButton(text="–§–∞–±—Ä–∏–∫–∞ –∏–¥–µ–π", url="https://t.me/your_invest_channel"),
    InlineKeyboardButton(text="–ß—Ç–æ —Ç–∞–∫–æ–µ –ë–°–ê", url="https://t.me/your_invest_channel")
)

@dp.message_handler(CommandStart())
async def start_handler(message: types.Message):
    subscribers = load_subscribers()
    if message.from_user.id not in subscribers:
        subscribers.append(message.from_user.id)
        save_subscribers(subscribers)

    photo_path = "welcome.jpg"
    caption = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ üì¢ –ö–∞–Ω–∞–ª—ã, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π."

    try:
        with open(photo_path, "rb") as photo:
            await message.answer_photo(photo, caption=caption, reply_markup=menu_keyboard)
    except FileNotFoundError:
        await message.answer(caption, reply_markup=menu_keyboard)

@dp.message_handler(lambda msg: msg.text == "üì¢ –ö–∞–Ω–∞–ª—ã")
async def send_inline_links(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª:", reply_markup=inline_links)

# –†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ –∫–∞–Ω–∞–ª–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
@dp.channel_post_handler()
async def channel_post_handler(message: types.Message):
    text = f"üÜï –ù–æ–≤–æ—Å—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞:\n\n{message.text or '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}"
    subscribers = load_subscribers()
    for user_id in subscribers:
        try:
            await bot.send_message(chat_id=user_id, text=text)
        except:
            continue

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)